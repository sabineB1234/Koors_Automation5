{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-24T10:06:42.403Z",
    "end": "2024-07-24T10:07:39.985Z",
    "duration": 57582,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6464c23a-e193-4643-9de7-5226414c97bc",
      "title": "",
      "fullFile": "cypress/e2e/features/authentification/login/login.feature",
      "file": "cypress/e2e/features/authentification/login/login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e4e4ef8b-d2ba-48b7-b103-2a38aa2be8e1",
          "title": "director Login with valid and invalid credentials",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Successful director Login",
              "fullTitle": "director Login with valid and invalid credentials Successful director Login",
              "timedOut": null,
              "duration": 8949,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "883914da-2d0b-42e3-8e23-7fb26c7fd6b9",
              "parentUUID": "e4e4ef8b-d2ba-48b7-b103-2a38aa2be8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with multiple users (example #1)",
              "fullTitle": "director Login with valid and invalid credentials Login with multiple users (example #1)",
              "timedOut": null,
              "duration": 7807,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9f097e60-93bd-4e98-b6bc-0ce177dfd193",
              "parentUUID": "e4e4ef8b-d2ba-48b7-b103-2a38aa2be8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with multiple users (example #2)",
              "fullTitle": "director Login with valid and invalid credentials Login with multiple users (example #2)",
              "timedOut": null,
              "duration": 7612,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7f223f90-768c-4907-bed7-a1a62e5220ff",
              "parentUUID": "e4e4ef8b-d2ba-48b7-b103-2a38aa2be8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with multiple users (example #3)",
              "fullTitle": "director Login with valid and invalid credentials Login with multiple users (example #3)",
              "timedOut": null,
              "duration": 7712,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a3db4283-1b9f-4603-bb49-74ad8469be50",
              "parentUUID": "e4e4ef8b-d2ba-48b7-b103-2a38aa2be8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with multiple users (example #4)",
              "fullTitle": "director Login with valid and invalid credentials Login with multiple users (example #4)",
              "timedOut": null,
              "duration": 7860,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0a8a1965-97a7-4e31-aff2-41a9a9a8d294",
              "parentUUID": "e4e4ef8b-d2ba-48b7-b103-2a38aa2be8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with multiple users (example #5)",
              "fullTitle": "director Login with valid and invalid credentials Login with multiple users (example #5)",
              "timedOut": null,
              "duration": 7458,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0ac6e782-600a-4e59-aa52-6ae485286f00",
              "parentUUID": "e4e4ef8b-d2ba-48b7-b103-2a38aa2be8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with multiple users (example #6)",
              "fullTitle": "director Login with valid and invalid credentials Login with multiple users (example #6)",
              "timedOut": null,
              "duration": 7338,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ea571fac-448c-46a8-857f-d440c7555d57",
              "parentUUID": "e4e4ef8b-d2ba-48b7-b103-2a38aa2be8e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "883914da-2d0b-42e3-8e23-7fb26c7fd6b9",
            "9f097e60-93bd-4e98-b6bc-0ce177dfd193",
            "7f223f90-768c-4907-bed7-a1a62e5220ff",
            "a3db4283-1b9f-4603-bb49-74ad8469be50",
            "0a8a1965-97a7-4e31-aff2-41a9a9a8d294",
            "0ac6e782-600a-4e59-aa52-6ae485286f00",
            "ea571fac-448c-46a8-857f-d440c7555d57"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 54736,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "Koors / SlashUp",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/html/.jsons"
      },
      "version": "6.2.0"
    }
  }
}